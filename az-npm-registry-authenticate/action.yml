name: "Azure Npm Registry Authenticate"
description: "Authenticate to Azure Npm Registry feed using Azure CLI."

inputs:
  ado-organization-name:
    description: 'The name of the Azure DevOps organization'
    required: true
  ado-feed-name:
    description: 'The name of the Azure DevOps feed'
    required: true
  variables:
    description: "Repository variables in JSON format (variables: '\\$\\{\\{ toJSON(vars) \\}\\}'). If run through a Copilot coding agent, use the individual Azure authentication parameters instead."
    required: false
  client-id:
    description: "Client ID for Azure authentication"
    required: false
  tenant-id:
    description: "Tenant ID for Azure authentication"
    required: false
outputs:
  token:
    description: "The Azure DevOps access token for the authenticated session"
    value: ${{ steps.set-token.outputs.token }}

runs:
  using: "composite"
  steps:
    - name: Validate variables are available
      shell: pwsh
      env:
        clientId: ${{ inputs.client-id || fromJSON(inputs.variables).AZURE_CLIENT_ID }}
        tenantId: ${{ inputs.tenant-id || fromJSON(inputs.variables).AZURE_TENANT_ID }}
      run: |
        $IsValid = $env:clientId -and $env:tenantId
        if (-not $IsValid) {
          Write-Error @"
        Required variables are not set. Please make sure 'AZURE_CLIENT_ID' and 'AZURE_TENANT_ID' are set in your repository variables.
        Documentation to configure the repository: https://workleap.atlassian.net/wiki/spaces/TL/pages/5211226436
        "@
          exit 1
        }

    - name: 'Azure CLI login'
      uses: azure/login@v2
      with:
        client-id: ${{ inputs.client-id || fromJSON(inputs.variables).AZURE_CLIENT_ID }}
        tenant-id: ${{ inputs.tenant-id || fromJSON(inputs.variables).AZURE_TENANT_ID }}
        allow-no-subscriptions: true

    - name: Get Azure DevOps token
      id: set-token
      shell: bash
      run: |
        # Azure DevOps resource ID for accessing Azure Artifacts
        # https://learn.microsoft.com/en-us/rest/api/azure/devops/tokens/?view=azure-devops-rest-7.1&tabs=powershell
        AZURE_DEVOPS_RESOURCE_ID="499b84ac-1321-427f-aa17-267ca6975798"

        # Get access token for Azure DevOps
        accessToken=$(az account get-access-token \
          --query accessToken \
          --resource $AZURE_DEVOPS_RESOURCE_ID \
          --output tsv)

        # Mask the token in logs
        echo "::add-mask::$accessToken"

        echo "token=$accessToken" >> $GITHUB_OUTPUT

    - name: Configure package manager authentication
      run: |
        $registryUrl = "//pkgs.dev.azure.com/${{ inputs.ado-organization-name }}/_packaging/${{ inputs.ado-feed-name }}/npm/registry/"
        $authTokenKey = "${registryUrl}:_authToken"

        if (Get-Command npm -ErrorAction SilentlyContinue) {
          Write-Host "Configuring npm authentication..."
          npm config set $authTokenKey $env:NPM_TOKEN
        } else {
          Write-Host "npm not found, skipping npm configuration"
        }

        if (Get-Command pnpm -ErrorAction SilentlyContinue) {
          Write-Host "Configuring pnpm authentication..."
          pnpm config set $authTokenKey $env:NPM_TOKEN
        } else {
          Write-Host "pnpm not found, skipping pnpm configuration"
        }

        if (Get-Command yarn -ErrorAction SilentlyContinue) {
          Write-Host "Configuring yarn authentication..."

          $yarnRegistryKey = "//pkgs.dev.azure.com/${{ inputs.ado-organization-name }}/_packaging/${{ inputs.ado-feed-name }}/npm/registry/"
          yarn config set "npmRegistries[${yarnRegistryKey}].npmAuthToken" $env:NPM_TOKEN
          yarn config set "npmRegistries[${yarnRegistryKey}].npmAlwaysAuth" true
        } else {
          Write-Host "yarn not found, skipping yarn configuration"
        }
      shell: pwsh
      env:
        NPM_TOKEN: ${{ steps.set-token.outputs.token }}
