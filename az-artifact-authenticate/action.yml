name: "Azure Artifacts Authenticate"
description: "Authenticate to Azure Artifacts feed using Azure CLI."

inputs:
  feed-url:
    description: 'The URL of the Azure Artifacts feed'
    required: true
  variables:
    description: "Repository variables in JSON format (variables: '\\$\\{\\{ toJSON(vars) \\}\\}'). If run through a Copilot coding agent, use the individual Azure authentication parameters instead."
    required: false
  client-id:
    description: "Client ID for Azure authentication"
    required: false
  tenant-id:
    description: "Tenant ID for Azure authentication"
    required: false
  nuget-config-path:
    description: "Path to the NuGet configuration file (optional)"
    required: false

outputs:
  token:
    description: "The Azure DevOps access token for the authenticated session"
    value: ${{ steps.set-token.outputs.token }}
  external-feed-endpoints:
    description: "The external feed endpoints configured for the Azure Artifacts feed"
    value: ${{ steps.set-token.outputs.external-feed-endpoints }}

runs:
  using: "composite"
  steps:
    - name: Validate variables are available
      shell: pwsh
      env:
        clientId: ${{ inputs.client-id || fromJSON(inputs.variables).AZURE_CLIENT_ID }}
        tenantId: ${{ inputs.tenant-id || fromJSON(inputs.variables).AZURE_TENANT_ID }}
      run: |
        $IsValid = $env:clientId -and $env:tenantId
        if (-not $IsValid) {
          Write-Error @"
        Required variables are not set. Please make sure 'AZURE_CLIENT_ID' and 'AZURE_TENANT_ID' are set in your repository variables.
        Documentation to configure the repository: https://workleap.atlassian.net/wiki/spaces/TL/pages/5211226436
        "@
          exit 1
        }

    - name: 'Azure CLI login'
      uses: azure/login@v2
      with:
        client-id: ${{ inputs.client-id || fromJSON(inputs.variables).AZURE_CLIENT_ID }}
        tenant-id: ${{ inputs.tenant-id || fromJSON(inputs.variables).AZURE_TENANT_ID }}
        allow-no-subscriptions: true

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v5
      with:
        source-url: ${{ inputs.feed-url }}
        config-file: ${{ inputs.nuget-config-path }}
      env:
        NUGET_AUTH_TOKEN: "unused-auth-token"

    - name: Configure authentication provider to use Azure DevOps token
      id: set-token
      shell: bash
      run: |
        # Azure DevOps resource ID for accessing Azure Artifacts
        # https://learn.microsoft.com/en-us/rest/api/azure/devops/tokens/?view=azure-devops-rest-7.1&tabs=powershell
        AZURE_DEVOPS_RESOURCE_ID="499b84ac-1321-427f-aa17-267ca6975798"

        # Get access token for Azure DevOps
        accessToken=$(az account get-access-token \
          --query accessToken \
          --resource $AZURE_DEVOPS_RESOURCE_ID \
          --output tsv)

        # Mask the token in logs
        echo "::add-mask::$accessToken"

        externalFeedEndpoints="{\"endpointCredentials\": [{\"endpoint\":\"${{ inputs.feed-url }}\", \"username\":\"docker\", \"password\":\"$accessToken\"}]}"

        echo "VSS_NUGET_ACCESSTOKEN=$accessToken" >> $GITHUB_ENV
        echo "VSS_NUGET_EXTERNAL_FEED_ENDPOINTS=$externalFeedEndpoints" >> $GITHUB_ENV

        echo "token=$accessToken" >> $GITHUB_OUTPUT
        echo "external-feed-endpoints=$externalFeedEndpoints" >> $GITHUB_OUTPUT

    - name: Install credential provider for Azure Artifacts
      shell: bash
      run: |
        sh -c "$(curl -fsSL https://aka.ms/install-artifacts-credprovider.sh)"
