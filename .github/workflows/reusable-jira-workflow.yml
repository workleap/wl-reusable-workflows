name: Jira

on:
  pull_request:
    paths-ignore: ["*.md"]
  workflow_call:
    inputs:
      branch_name:
        description: 'The branch name to use for Jira (defaults to the triggering branch)'
        type: string
        required: false
        default: ${{ github.head_ref || github.ref_name }}

jobs:
  main:
    runs-on: [idp]
    permissions:
      id-token: write
      contents: read
      pull-requests: write

    steps:
    - name: Get JiraApiToken secret
      id: get_jira_api_secret
      uses: workleap/wl-reusable-workflows/retrieve-managed-secret@main
      with:
        azure-client-id: ${{ vars.AZURE_CLIENT_ID }}
        azure-tenant-id: ${{ vars.AZURE_TENANT_ID }}
        azure-subscription-id: ${{ vars.WORKLEAP_GLOBAL_KEYVAULT_SUBSCRIPTION_ID }}
        keyvault-name: ${{ vars.WORKLEAP_GLOBAL_KEYVAULT_NAME }}
        secret-name: "JiraApiToken"

    - name: Get JiraUsername secret
      id: get_jira_username_secret
      uses: workleap/wl-reusable-workflows/retrieve-managed-secret@main
      with:
        azure-client-id: ${{ vars.AZURE_CLIENT_ID }}
        azure-tenant-id: ${{ vars.AZURE_TENANT_ID }}
        azure-subscription-id: ${{ vars.WORKLEAP_GLOBAL_KEYVAULT_SUBSCRIPTION_ID }}
        keyvault-name: ${{ vars.WORKLEAP_GLOBAL_KEYVAULT_NAME }}
        secret-name: "JiraUsername"
    
    - name: Get branch name
      id: branch_name
      shell: pwsh
      run: | 
        $BranchName = "${{ inputs.branch_name || github.head_ref || github.ref_name }}"
        Write-Host "Branch name: $BranchName"
        "branch_name=$BranchName" >> $env:GITHUB_OUTPUT

    - name: Extract Jira Issue
      id: extract_jira
      uses: workleap/wl-reusable-workflows/extract-jira-issue@feature/feng-1082_add_test_for_jira_validation
      with:
        branch_name: ${{ steps.branch_name.outputs.branch_name }}

    - name: Check Jira Story
      shell: pwsh
      env:
        BranchName: "${{steps.branch_name.outputs.branch_name}}"
        BranchPattern: "${{steps.extract_jira.outputs.pattern}}"
        JiraMatches: "${{steps.extract_jira.outputs.matches}}"
        JiraIssueKey: "${{steps.extract_jira.outputs.jira_issue}}"
      run: |
            Install-Module JiraPS -Scope CurrentUser -Force
            if ("$env:BranchName" -like "*renovate/*" -eq $True)
            {
              Write-Host "Skipping, renovate branch detected"
              return
            }

            Set-JiraConfigServer -Server "${{ vars.JIRA_URL }}"
            if("$env:JiraMatches" -eq "false")
            {
              throw "Branch name '$env:BranchName' doesn't respect the required pattern $env:BranchPattern. A valid branch name example would be: feature/PRJ-123"
            }

            $PWord = ConvertTo-SecureString -String "${{ steps.get_jira_api_secret.outputs.secret }}" -AsPlainText -Force
            $Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList "${{ steps.get_jira_username_secret.outputs.secret }}", $PWord

            Write-Host "Retrieving Jira issue with number $env:JiraIssueKey"
            Get-JiraIssue -Key $env:JiraIssueKey -Credential $Credential -ErrorAction Stop | out-null
            Write-Host "Successfully retrieved Jira issue"

    - name: Add Jira issue link
      shell: pwsh
      env:
        BranchName: "${{ steps.branch_name.outputs.branch_name }}"
        BranchPattern: "${{ steps.extract_jira.outputs.pattern }}"
        JiraMatches: "${{ steps.extract_jira.outputs.matches }}"
        JiraIssue: "${{ steps.extract_jira.outputs.jira_issue }}"
      run: |
        if (-not "${{ github.event.pull_request.number }}") {
          Write-Host 'No pull request context. Skipping adding Jira link to pull request description.'
          exit 0
        }

        Write-Host 'Adding JIRA link to pull request description'

        $repo = "${{ github.repository }}"
        $prNumber = "${{ github.event.pull_request.number }}"

        # Not all valid branch names will match the pattern (e.g. renovate branches)
        if("$env:JiraMatches" -eq "true") {
          $jiraLinkUrl = "https://workleap.atlassian.net/browse/$env:JiraIssue"
          $jiraLinkDescription = "Jira issue link: [$env:JiraIssue]($jiraLinkUrl)"

          $token = "${{ github.token }}"
          $headers = @{
            Authorization = "Bearer $token"
            "Accept" = "application/vnd.github.v3+json"
          }

          $prUrl = "https://api.github.com/repos/$repo/pulls/$prNumber"
          $pr = Invoke-RestMethod -Uri $prUrl -Headers $headers

          if ($null -ne $pr.body -and ($pr.body -match "$jiraLinkUrl")) {
            $newBody = $pr.body
          } else {
            $newBody = "$jiraLinkDescription`n`n$($pr.body)"
          }

          if ($newBody -ne $pr.body) {
            $body = @{ body = $newBody } | ConvertTo-Json
            Invoke-RestMethod -Uri $prUrl -Headers $headers -Method Patch -Body $body
            Write-Host 'Successfully added JIRA link to pull request description'
          } else {
            Write-Host 'JIRA link already present in pull request description'
          }
        } else {
          Write-Host "Branch name '$env:BranchName' does not match the Jira pattern $env:BranchPattern. Skipping JIRA link insertion."
        }
