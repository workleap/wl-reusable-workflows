name: Jira

on:
  workflow_call:
    inputs:
      branch_name:
        description: 'The branch name to use for Jira (defaults to the triggering branch)'
        type: string
        required: false
        default: ${{ github.head_ref || github.ref_name }}

jobs:
  main:
    runs-on: [idp]
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Get JiraApiToken secret
      id: get_jira_api_secret
      uses: workleap/wl-reusable-workflows/retrieve-managed-secret@main
      with:
        azure-client-id: ${{ vars.AZURE_CLIENT_ID }}
        azure-tenant-id: ${{ vars.AZURE_TENANT_ID }}
        azure-subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
        keyvault-name: ${{ vars.IDP_CICD_KEYVAULT_NAME }}
        secret-name: "JiraApiToken"
    
    - name: Get JiraUsername secret
      id: get_jira_username_secret
      uses: workleap/wl-reusable-workflows/retrieve-managed-secret@main
      with:
        azure-client-id: ${{ vars.AZURE_CLIENT_ID }}
        azure-tenant-id: ${{ vars.AZURE_TENANT_ID }}
        azure-subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
        keyvault-name: ${{ vars.IDP_CICD_KEYVAULT_NAME }}
        secret-name: "JiraUsername"

    - name: Check Jira Story
      shell: pwsh
      run: |
            Install-Module JiraPS -Scope CurrentUser -Force
            if ("${{ inputs.branch_name }}" -like "*renovate/*" -eq $True)
            {
              Write-Host "Skipping, renovate branch detected"
              return
            }

            Set-JiraConfigServer -Server "${{ vars.JIRA_URL }}"
            if("${{ inputs.branch_name }}" -match "(?<=\/)[a-zA-Z][a-zA-Z0-9]*[_-][0-9]+" -eq $False)
            {
              throw "Branch name ${{ inputs.branch_name }} doesn't respect the required pattern ((?<=\/)[a-zA-Z][a-zA-Z0-9]*[_-][0-9]+). A valid branch name example would be: feature/IDP-123"
            }

            $JiraIssueKey = $Matches[0]
            $PWord = ConvertTo-SecureString -String "${{ steps.get_jira_api_secret.outputs.secret }}" -AsPlainText -Force
            $Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList "${{ steps.get_jira_username_secret.outputs.secret }}", $PWord

            Write-Host "Retrieving Jira issue with number $JiraIssueKey"
            Get-JiraIssue -Key $JiraIssueKey -Credential $Credential -ErrorAction Stop | out-null
            Write-Host "Successfully retrieved Jira issue"