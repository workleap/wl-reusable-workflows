name: Jira

on:
  workflow_call:
    inputs:
      branch_name:
        required: true
        type: string

env:
  BranchPattern: (?<=\/)[a-zA-Z][a-zA-Z0-9]*[_-][0-9]+

jobs:
  main:
    runs-on: [idp]
    permissions:
      id-token: write
      contents: read
      pull-requests: write

    steps:
    - name: Get JiraApiToken secret
      id: get_jira_api_secret
      uses: workleap/wl-reusable-workflows/retrieve-managed-secret@main
      with:
        azure-client-id: ${{ vars.AZURE_CLIENT_ID }}
        azure-tenant-id: ${{ vars.AZURE_TENANT_ID }}
        azure-subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
        keyvault-name: ${{ vars.IDP_CICD_KEYVAULT_NAME }}
        secret-name: "JiraApiToken"

    - name: Get JiraUsername secret
      id: get_jira_username_secret
      uses: workleap/wl-reusable-workflows/retrieve-managed-secret@main
      with:
        azure-client-id: ${{ vars.AZURE_CLIENT_ID }}
        azure-tenant-id: ${{ vars.AZURE_TENANT_ID }}
        azure-subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
        keyvault-name: ${{ vars.IDP_CICD_KEYVAULT_NAME }}
        secret-name: "JiraUsername"

    - name: Check Jira Story
      shell: pwsh
      run: |
            Install-Module JiraPS -Scope CurrentUser -Force
            if ("${{ inputs.branch_name }}" -like "*renovate/*" -eq $True)
            {
              Write-Host "Skipping, renovate branch detected"
              return
            }

            Set-JiraConfigServer -Server "${{ vars.JIRA_URL }}"
            if("${{ inputs.branch_name }}" -match $env:BranchPattern -eq $False)
            {
              throw "Branch name ${{ inputs.branch_name }} doesn't respect the required pattern $env:BranchPattern. A valid branch name example would be: feature/PRJ-123"
            }

            $JiraIssueKey = $Matches[0]
            $PWord = ConvertTo-SecureString -String "${{ steps.get_jira_api_secret.outputs.secret }}" -AsPlainText -Force
            $Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList "${{ steps.get_jira_username_secret.outputs.secret }}", $PWord

            Write-Host "Retrieving Jira issue with number $JiraIssueKey"
            Get-JiraIssue -Key $JiraIssueKey -Credential $Credential -ErrorAction Stop | out-null
            Write-Host "Successfully retrieved Jira issue"

    - name: Add link to Jira
      shell: pwsh
      run: |
        if (-not "${{ github.event.pull_request.number }}") {
          Write-Host 'No pull request context. Skipping adding Jira link to pull request description.'
          exit 0
        }

        Write-Host 'Adding JIRA link to pull request description'

        $repo = "${{ github.repository }}"
        $prNumber = "${{ github.event.pull_request.number }}"

        "${{ inputs.branch_name }}" -match $env:BranchPattern
        $jiraIssue = $Matches[0]

        $jiraLinkUrl = "https://workleap.atlassian.net/browse/$jiraIssue"
        $jiraLinkDescription = "Jira issue link: $jiraLinkUrl"

        $token = "${{ github.token }}"
        $headers = @{
          Authorization = "Bearer $token"
          "Accept" = "application/vnd.github.v3+json"
        }

        $prUrl = "https://api.github.com/repos/$repo/pulls/$prNumber"
        $pr = Invoke-RestMethod -Uri $prUrl -Headers $headers

        if ($null -ne $pr.body -and ($pr.body -match "Jira ticket link" -or $pr.body -match "Jira issue link")) {
          $newBody = $pr.body
        } else {
          $newBody = "$jiraLinkDescription`n`n$($pr.body)"
        }

        if ($newBody -ne $pr.body) {
          $body = @{ body = $newBody } | ConvertTo-Json
          Invoke-RestMethod -Uri $prUrl -Headers $headers -Method Patch -Body $body
          Write-Host 'Successfully added JIRA link to pull request description'
        } else {
          Write-Host 'JIRA link already present in pull request description'
        }
      env:
        JiraIssueKey: ${{ env.JiraIssueKey }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}