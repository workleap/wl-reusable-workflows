name: 'Sync Template to Downstream Repos'

on:
  workflow_call:
    inputs:
      templateRepoName:
        description: 'Name of the template repository'
        type: string
        required: true
      repoPrefix:
        description: 'Prefix for downstream repositories'
        type: string
        required: true

jobs:
  get-repos:
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.get-repos.outputs.repos }}
    steps:
      - name: Authenticate with GitHub App
        id: auth
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{ secrets.TERRAFORM_AUTOMATION_APP_ID }}
          private_key: ${{ secrets.TERRAFORM_AUTOMATION_PRIVATE_KEY }}
      
      - name: Get repositories with prefix
        id: get-repos
        run: |
          # repos=$(gh repo list workleap --limit 1000 --json name --jq '[.[] | select(.name | startswith("terraform-")) | .name]')
          repos='["terraform-cloudflare-enterprise-dns-record"]'
          echo "repos=$repos" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ steps.auth.outputs.token }}

  sync:
    needs: get-repos
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: ${{ fromJson(needs.get-repos.outputs.repos) }}
      fail-fast: false  # Continue with other repos even if one fails
    steps:
      - name: Authenticate
        id: auth
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{ secrets.TERRAFORM_AUTOMATION_APP_ID }}
          private_key: ${{ secrets.TERRAFORM_AUTOMATION_PRIVATE_KEY }}
          #repositories: '["workleap/${{ matrix.repo }}"]'
      
      - name: Checkout Template
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.auth.outputs.token }}
      
      - name: Checkout Downstream
        uses: actions/checkout@v4
        with:
          repository: workleap/${{ matrix.repo }}
          token: ${{ steps.auth.outputs.token }}
          path: downstream

      - name: Set git author
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Merge Template Changes
        run: |
          cd downstream
          git remote add template https://x-access-token:${{ steps.auth.outputs.token }}@github.com/workleap/${{ inputs.templateRepoName }}.git
          git fetch template
          git merge template/main --allow-unrelated-histories -m "Merge updates from template"
          git push origin main