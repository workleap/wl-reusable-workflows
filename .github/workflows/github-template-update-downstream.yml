name: 'Sync Template to Downstream Repos'

on:
  workflow_call:
    inputs:
      templateRepoName:
        description: 'Name of the template repository'
        type: string
        required: true
      repoPrefix:
        description: 'Prefix for downstream repositories'
        type: string
        required: true
      workflowFileName:
        description: 'Name of the sync workflow file to not copy. Defaults to update-downstreams.yml'
        type: string
        default: 'update-downstreams.yml'
      ignoreRepos:
        description: 'Comma-separated list of repository names to ignore during sync'
        type: string
        default: ''
        required: false

permissions:
  contents: write
  pull-requests: write

jobs:
  get-repos:
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.get-repos.outputs.repos }}
    steps:
      - name: Authenticate with GitHub App
        id: auth
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{ secrets.TERRAFORM_AUTOMATION_APP_ID }}
          private_key: ${{ secrets.TERRAFORM_AUTOMATION_PRIVATE_KEY }}
      
      - name: Get repositories with prefix
        id: get-repos
        run: |
          repos=$(gh repo list workleap --limit 1000 --json name --jq '[.[] | select(.name | startswith("${{ inputs.repoPrefix }}")) | .name]')
          echo "repos=$repos" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ steps.auth.outputs.token }}

  sync:
    needs: get-repos
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: ${{ fromJson(needs.get-repos.outputs.repos) }}
      fail-fast: false
    steps:
      - name: Authenticate
        id: auth
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{ secrets.TERRAFORM_AUTOMATION_APP_ID }}
          private_key: ${{ secrets.TERRAFORM_AUTOMATION_PRIVATE_KEY }}
      
      - name: Checkout Template
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: template
      
      - name: Checkout Downstream
        uses: actions/checkout@v4
        with:
          repository: workleap/${{ matrix.repo }}
          token: ${{ steps.auth.outputs.token }}
          path: downstream

      - name: Set git author
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Merge Template Changes
        if: ${{ !contains(inputs.ignoreRepos, matrix.repo) }}
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'

          # Move into the downstream clone
          Set-Location downstream

          # Add and fetch the template remote
          git remote add template ../template

          # Create a dedicated sync branch (avoids direct pushes to main)
          git switch -c sync-template

          # Restore template files except the workflow file
          git restore --source=template/main -- CONTRIBUTING.md SECURITY.md renovate.json .github/
          git restore --source=template/main -- . ":(exclude).github/workflows/${{ inputs.workflowFileName }}"

          # Stage and commit if there are changes
          git add CONTRIBUTING.md SECURITY.md renovate.json .github/
          if (-not (git diff --staged --quiet)) {
            git commit -m "Sync template files from ${{ inputs.templateRepoName }}"

            # Push to feature branch and open a PR
            git fetch origin main
            git push -u origin sync-template
            gh pr create `
              --repo workleap/${{ matrix.repo }} `
              --base main `
              --head sync-template `
              --title "Sync template files from ${{ inputs.templateRepoName }}" `
              --body "Automated sync of CONTRIBUTING.md, SECURITY.md, renovate.json and workflows."

            # Merge non-interactively, bypassing checks, squash, and delete branch
            gh pr merge sync-template `
              --repo workleap/${{ matrix.repo }} `
              --admin `
              --squash `
              --delete-branch

          } else {
            Write-Output "No changes to commit"
          }

        env:
          GH_TOKEN: ${{ steps.auth.outputs.token }}