name: Renovate

on:
  # Temporarily enable manual workflow trigger for testing
  workflow_dispatch: {}
  pull_request:
    paths:
      - .github/workflows/renovate.yml
  schedule:
    - cron: "5 2 * * *"

# We are using OpenID Connect to authenticate with Azure with secret.
# https://docs.github.com/en/actions/security-for-github-actions/security-hardening-your-deployments/configuring-openid-connect-in-azure
permissions:
  id-token: write
  contents: read

jobs:
  renovate:
    runs-on: [idp]
    environment: ci
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get renovate-github-pat secret
        id: get_github_secret
        uses: workleap/wl-reusable-workflows/retrieve-managed-secret@main
        with:
          azure-client-id: ${{ vars.AZURE_CLIENT_ID }}
          azure-tenant-id: ${{ vars.AZURE_TENANT_ID }}
          azure-subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          keyvault-name: ${{ vars.IDP_CICD_KEYVAULT_NAME }}
          secret-name: "renovate-github-pat"
      
      - name: Get renovate-tfc-token secret
        id: get_terraform_secret
        uses: workleap/wl-reusable-workflows/retrieve-managed-secret@main
        with:
          azure-client-id: ${{ vars.AZURE_CLIENT_ID }}
          azure-tenant-id: ${{ vars.AZURE_TENANT_ID }}
          azure-subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          keyvault-name: ${{ vars.IDP_CICD_KEYVAULT_NAME }}
          secret-name: "renovate-tfc-token"

      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Renovate
        shell: bash
        run: npx renovate
        env:
          RENOVATE_CONFIG_FILE: "renovate.json"
          LOG_FILE: renovate.log
          RENOVATE_TOKEN: ${{ steps.get_github_secret.outputs.secret }}
          LOG_LEVEL: "debug"
          RENOVATE_TERRAFORM__MODULE_APP_TERRAFORM_IO_TOKEN: ${{ steps.get_terraform_secret.outputs.secret }}
          RENOVATE_BINARY_SOURCE: "install"

      # Ensure the output does not contain a line starting with "No repositories found"
      - name: Validate renovate output
        shell: bash
        run: cat renovate.log | jq --slurp -e 'any(.[].msg; test("^No repositories found")) | not'

      - uses: ./send-slack-notification
        if: failure() && github.event_name == 'schedule'
        with:
          webhook_url: ${{secrets.SLACK_WEBHOOK_URL_IDP_DEV_ALERTS}}
          messageTemplate: "FailedJob"
