name: Terraform standard checks
on: workflow_call

jobs:
  terraform-common:
    name: Terraform standard checks
    runs-on: [idp]
    permissions:
      contents: write
      id-token: write
    steps:     
      - name: Authenticate with GitHub App
        id: auth
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.TERRAFORM_AUTOMATION_APP_ID }}
          private-key: ${{ secrets.TERRAFORM_AUTOMATION_PRIVATE_KEY }}   

      - name: Get terraform cloud token
        id: get_terraform_cloud_token
        uses: workleap/wl-reusable-workflows/retrieve-managed-secret@main
        with:
          azure-client-id: ${{ vars.AZURE_CLIENT_ID }}
          azure-tenant-id: ${{ vars.AZURE_TENANT_ID }}
          azure-subscription-id: ${{ vars.WORKLEAP_GLOBAL_KEYVAULT_SUBSCRIPTION_ID }}
          keyvault-name: ${{ vars.WORKLEAP_GLOBAL_KEYVAULT_NAME }}
          secret-name: "renovate-tfc-token"            

      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }}
          fetch-depth: ${{ github.event.pull_request.commits }}
          token: ${{ steps.auth.outputs.token }}
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        
      - name: Detect changed Terraform files
        id: detect_tf
        uses: tj-actions/changed-files@24d32ffd492484c1d75e0c0b894501ddb9d30d62 # v47.0.0
        with:
          separator: "\n"
          files: |
            **/*.tf
            **/*.tfvars

      - name: Terraform Format (per changed directory)
        id: terraform-fmt
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $PSNativeCommandUseErrorActionPreference = $true
          $filesMultiline = @"
          ${{ steps.detect_tf.outputs.all_changed_files }}
          "@
          if ([string]::IsNullOrWhiteSpace($filesMultiline)) {
            Write-Host "No changed Terraform files detected. Skipping formatting."
            exit 0
          }

          $files = $filesMultiline -split "`n" | Where-Object { -not [string]::IsNullOrWhiteSpace($_) }
          $dirs = $files |
            ForEach-Object { $d = Split-Path $_ -Parent; if ([string]::IsNullOrWhiteSpace($d)) { '.' } else { $d } } |
            Sort-Object -Unique

          foreach ($dir in $dirs) {
            Write-Host "Formatting Terraform in: $dir"
            Push-Location $dir
            try {
              terraform fmt -recursive
            } finally {
              Pop-Location
            }
          }

      - name: Validate Terraform Code (per changed directory)
        id: terraform-validate
        shell: pwsh
        if: ${{ !startsWith(github.repository, 'workleap/wl-terraform') }}
        env:
          TF_TOKEN_app_terraform_io: ${{ steps.get_terraform_cloud_token.outputs.secret }}
        run: |
          $ErrorActionPreference = 'Stop'
          $PSNativeCommandUseErrorActionPreference = $true
          $filesMultiline = @"
          ${{ steps.detect_tf.outputs.all_changed_files }}
          "@
          if ([string]::IsNullOrWhiteSpace($filesMultiline)) {
            Write-Host "No changed Terraform files detected. Skipping validation."
            exit 0
          }

          $files = $filesMultiline -split "`n" | Where-Object { -not [string]::IsNullOrWhiteSpace($_) }
          $dirs = $files |
            ForEach-Object {
              $d = Split-Path $_ -Parent
              if ([string]::IsNullOrWhiteSpace($d)) { '.' } else { $d }
            } |
            Sort-Object -Unique

          foreach ($dir in $dirs) {
            Write-Host "Validating Terraform in: $dir"
            Push-Location $dir
            try {
              terraform init
              terraform validate
            } finally {
              Pop-Location
            }
          }
          
      - name: Cleanup .terraform folders (per changed directory)
        if: ${{ !startsWith(github.repository, 'workleap/wl-terraform') }}
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $PSNativeCommandUseErrorActionPreference = $true
          $filesMultiline = @"
          ${{ steps.detect_tf.outputs.all_changed_files }}
          "@
          if ([string]::IsNullOrWhiteSpace($filesMultiline)) { exit 0 }
          $files = $filesMultiline -split "`n" | Where-Object { -not [string]::IsNullOrWhiteSpace($_) }
          $dirs = $files |
            ForEach-Object { if ([string]::IsNullOrWhiteSpace((Split-Path $_ -Parent))) { '.' } else { Split-Path $_ -Parent } } |
            Sort-Object -Unique
          foreach ($dir in $dirs) {
            try {
              if (Test-Path -Path (Join-Path $dir ".terraform")) {
                Remove-Item -Path (Join-Path $dir ".terraform") -Recurse -Force
              }
            } catch {
              Write-Warning "Failed to clean .terraform in $dir. Error: $_"
            }
          }
        
      - name: Run Terraform tests (per changed directory)
        id: check-tests
        shell: pwsh
        if: ${{ !startsWith(github.repository, 'workleap/wl-terraform') }}
        env:
          TF_TOKEN_app_terraform_io: ${{ steps.get_terraform_cloud_token.outputs.secret }}
        run: |
          $ErrorActionPreference = 'Stop'
          $PSNativeCommandUseErrorActionPreference = $true
          $filesMultiline = @"
          ${{ steps.detect_tf.outputs.all_changed_files }}
          "@
          if ([string]::IsNullOrWhiteSpace($filesMultiline)) { Write-Host "No changed Terraform files detected. Skipping tests."; exit 0 }
          $files = $filesMultiline -split "`n" | Where-Object { -not [string]::IsNullOrWhiteSpace($_) }
          $dirs = $files |
            ForEach-Object { $d = Split-Path $_ -Parent; if ([string]::IsNullOrWhiteSpace($d)) { '.' } else { $d } } |
            Sort-Object -Unique

          foreach ($dir in $dirs) {
            $testsPath = Join-Path $dir 'tests'
            $testsExist = Test-Path -Path $testsPath -PathType Container
            $testFiles = if ($testsExist) { Get-ChildItem -Path $testsPath -Filter "*.tftest.hcl" -Recurse } else { @() }
            if ($testsExist -and $testFiles.Count -gt 0) {
              Write-Host "Running tests in: $testsPath"
              Push-Location $testsPath
              try {
                terraform init
                terraform test
              } finally {
                Pop-Location
              }
            } else {
              Write-Host "No unit tests found in $testsPath. Skipping."
            }
          }

      - name: Commit file updates
        uses: EndBug/add-and-commit@a94899bca583c204427a224a7af87c02f9b325d5 # v9.1.4
        with:
          
          author_name: github-actions[bot]
          author_email: github-actions[bot]@users.noreply.github.com
          default_author: github_actions
          message: 'chore: apply formatting update'
          push: true
          fetch: true
          pull: '--no-rebase'