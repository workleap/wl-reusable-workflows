name: Terraform tools on Branch Push
on: workflow_call

jobs:
  terraform-doc-fmt:
    name: Terraform formatting & docs
    runs-on: [idp]
    permissions:
      contents: write
    continue-on-error: true
    steps:          
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }}
          fetch-depth: 0
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        
      - name: Terraform Format
        run: terraform fmt -recursive

      - name: Terraform Docs
        run: terraform-docs markdown table --output-file README.md --hide resources,data-sources .

      - name: Show README changes
        run: |
          git diff README.md
          git status

      - name: Commit file updates
        uses: EndBug/add-and-commit@a94899bca583c204427a224a7af87c02f9b325d5 # v9.1.4
        with:
          add: '["**/*.md", "**/*.tf", "**/*.tfvars"]'
          author_name: github-actions[bot]
          author_email: github-actions[bot]@users.noreply.github.com
          default_author: github_actions
          message: 'chore: apply formatting and docs update'
          push: true
          fetch: true

  tflint:
    name: Terraform lint
    runs-on: [idp]
    steps:
      - name: Authenticate with GitHub App
        id: auth
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.TERRAFORM_AUTOMATION_APP_ID }}
          private-key: ${{ secrets.TERRAFORM_AUTOMATION_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        name: Checkout source code
        with:
          token: ${{ steps.auth.outputs.token }}
          
      - uses: terraform-linters/tflint-load-config-action@v2
        with:
          source-repo: workleap/wl-reusable-workflows
          source-path: /tflint/.tflint.hcl
          source-ref: main
          token: ${{ steps.auth.outputs.token }}
          
      - uses: terraform-linters/setup-tflint@v4
        name: Setup TFLint
        
      - name: Show version
        run: tflint --version
        
      - name: Init TFLint
        run: tflint --init
        env:
          # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
          GITHUB_TOKEN: ${{ steps.auth.outputs.token }}
          
      - name: Run TFLint
        run: tflint -f compact
        
  terraform-validate-and-tests:
    name: Terraform validate and tests
    runs-on: [idp]
    steps:
      - name: Get terraform cloud token
        id: get_terraform_cloud_token
        uses: workleap/wl-reusable-workflows/retrieve-managed-secret@main
        with:
          azure-client-id: ${{ vars.AZURE_CLIENT_ID }}
          azure-tenant-id: ${{ vars.AZURE_TENANT_ID }}
          azure-subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          keyvault-name: ${{ vars.IDP_CICD_KEYVAULT_NAME }}
          secret-name: "renovate-tfc-token"

      - uses: actions/checkout@v4
        name: Checkout source code

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Validation Terraform Code
        id: terraform-validate
        shell: bash
        env:
          TF_TOKEN_app_terraform_io: ${{ steps.get_terraform_cloud_token.outputs.secret }}
        run: |
          terraform init
          terraform validate
        
      - name: Check for tests directory and .tftest.hcl files
        id: check-tests
        shell: pwsh
        run: |
          $testsExist = Test-Path -Path "./tests" -PathType Container
          $testFiles = if ($testsExist) { Get-ChildItem -Path "./tests" -Filter "*.tftest.hcl" -Recurse } else { @() }
          
          if ($testsExist -and $testFiles.Count -gt 0) {
            Write-Output "has_tests=true" >> $env:GITHUB_OUTPUT
          } else {
            Write-Output "has_tests=false" >> $env:GITHUB_OUTPUT
          }
          
      - name: Run Terraform Tests
        if: steps.check-tests.outputs.has_tests == 'true'
        shell: bash
        env:
          TF_TOKEN_app_terraform_io: ${{ steps.get_terraform_cloud_token.outputs.secret }}
        run: |
          cd "./tests"
          terraform init
          terraform test
